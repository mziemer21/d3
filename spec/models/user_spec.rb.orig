require 'spec_helper'

describe User do

  before do
<<<<<<< HEAD
    @privilege = Privilege.new(qDrive: false, addSong: false, editSong: false, deleteSong: false, grantPermission: false, addUser: false, editUser: false, deleteUser: false)
    @user = User.new(name: "Example User", email: "user@example.com", privilege: @privilege)
=======
    #@privilege = Privilege.new
    @user = User.new(name: "Example User", email: "user@example.com")#, privilege)
>>>>>>> 26a814ef2bb918055d3c093eedd1c86d39c93662
  end

  subject { @user }

  it { should respond_to(:name) }
  it { should respond_to(:email) }
  it { should respond_to(:privilege)}

  it { should be_valid }

  describe "when name is not present" do
    before { @user.name = "" }
    it { should_not be_valid }
  end
  
  describe "when email is not present" do
    before { @user.email = "" }
    it { should_not be_valid }
  end
  
    describe "when email format is invalid" do
    it "should be invalid" do
      addresses = %w[user@foo,com user_at_foo.org example.user@foo.
                     foo@bar_baz.com foo@bar+baz.com]
      addresses.each do |invalid_address|
        @user.email = invalid_address
        expect(@user).not_to be_valid
      end
    end
  end

  describe "when email format is valid" do
    it "should be valid" do
      addresses = %w[user@foo.COM A_US-ER@f.b.org frst.lst@foo.jp a+b@baz.cn]
      addresses.each do |valid_address|
        @user.email = valid_address
        expect(@user).to be_valid
      end
    end
  end
<<<<<<< HEAD

end
=======
end
>>>>>>> 26a814ef2bb918055d3c093eedd1c86d39c93662
